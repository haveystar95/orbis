name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push PHP-FPM image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/php-fpm/Dockerfile
        push: true
        tags: denissolonina/orbis-php-fpm-image:latest
      
    - name: Build and push NGINX image
      uses: docker/build-push-action@v4
      with:
        context: ./docker/nginx
        file: ./docker/nginx/Dockerfile
        push: true
        tags: denissolonina/orbis-nginx-image:latest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    
    - name: Create deploy.zip
      run: |
        zip deploy.zip ./Dockerrun.aws.json
    
    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v16
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: eu-north-1
        application_name: op
        environment_name: op-prod
        version_label: ${{ github.run_number }}
        deployment_package: deploy.zip
    
    - name: Set up AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
    
    - name: Configure AWS CLI
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region us-west-2
        
    - name: Get Elastic Beanstalk environment information
      id: eb-env-info
      run: |
        echo "::set-output name=env-id::$(aws elasticbeanstalk describe-environments --application-name op --environment-names op-prod --query "Environments[0].EnvironmentId" --output text)"
    
    - name: Run composer install in php-fpm container
      run: |
        aws elasticbeanstalk send-command --environment-id ${{ steps.eb-env-info.outputs.env-id }} --command-name EXECUTE --instance-ids $(aws elasticbeanstalk describe-instances-health --environment-id ${{ steps.eb-env-info.outputs.env-id }} --query "InstanceHealthList[0].InstanceId" --output text) --command-args 'docker-compose -f /var/app/current/docker/docker-compose.yml exec -T php-fpm composer install'
