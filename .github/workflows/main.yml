name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push PHP-FPM image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/php-fpm/Dockerfile
        push: true
        tags: denissolonina/orbis-php-fpm-image:latest
      
    - name: Build and push NGINX image
      uses: docker/build-push-action@v4
      with:
        context: ./docker/nginx
        file: ./docker/nginx/Dockerfile
        push: true
        tags: denissolonina/orbis-nginx-image:latest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    
    - name: Save Dockerrun.aws.json
      run: |
        cat <<EOF > Dockerrun.aws.json
        {
          "AWSEBDockerrunVersion": 2,
          "containerDefinitions": [
            {
              "name": "php-fpm",
              "image": "denissolonina/orbis-php-fpm-image:latest",
              "essential": true,
              "memory": 128
            },
            {
              "name": "s-nginx",
              "image": "denissolonina/orbis-nginx-image:latest",
              "essential": true,
              "memory": 128,
              "portMappings": [
                {
                  "hostPort": 80,
                  "containerPort": 80
                }
              ]
              "links": ["php-fpm"]
            },

          ]
        }
        EOF

    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v14
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: eu-north-1
        application_name: op
        environment_name: Op-env-1
        version_label: 1213243
        deployment_package: Dockerrun.aws.json
